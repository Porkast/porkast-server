// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package dao

import (
	"context"
	"guoshao-fm-web/internal/consts"
	"guoshao-fm-web/internal/model/entity"
	"guoshao-fm-web/internal/service/internal/dao/internal"

	"github.com/gogf/gf/v2/errors/gcode"
	"github.com/gogf/gf/v2/errors/gerror"
)

// userListenLaterDao is the data access object for table user_listen_later.
// You can define custom methods on it to extend its functionality as you wish.
type userListenLaterDao struct {
	*internal.UserListenLaterDao
}

var (
	// UserListenLater is globally public accessible object for table user_listen_later operations.
	UserListenLater = userListenLaterDao{
		internal.NewUserListenLaterDao(),
	}
)

// Fill with you ideas below.
func CreateListenLaterByUserIdAndFeedId(ctx context.Context, newEntity entity.UserListenLater) (err error) {
	var (
		queryEntity entity.UserListenLater
	)

	queryEntity, err = GetListenLaterByUserIdAndFeedId(ctx, newEntity.UserId, newEntity.ChannelId, newEntity.ItemId)
	if queryEntity.Id != "" {
		err = gerror.New(consts.DB_DATA_ALREADY_EXIST)
		return
	}

	if newEntity.UserId == "" || newEntity.ChannelId == "" || newEntity.ItemId == "" || newEntity.RegDate == nil || newEntity.RegDate.IsDST() {
		err = gerror.New(gcode.CodeMissingParameter.Message())
		return
	}

	_, err = UserListenLater.Ctx(ctx).Insert(newEntity)

	return
}

func GetListenLaterByUserIdAndFeedId(ctx context.Context, userId, channelId, itemId string) (entity entity.UserListenLater, err error) {

	if userId == "" || channelId == "" || itemId == "" {
		err = gerror.New(gcode.CodeMissingParameter.Message())
		return
	}
	err = UserListenLater.Ctx(ctx).Where("user_id=?", userId).Where("channel_id=?", channelId).Where("item_id=?", itemId).Scan(&entity)

	return
}

func GetListenLaterListByUserId(ctx context.Context, userId string) (entityList []entity.UserListenLater, err error) {

	if userId == "" {
		err = gerror.New(gcode.CodeMissingParameter.Message())
		return
	}
	err = UserListenLater.Ctx(ctx).Where("user_id=?", userId).Scan(&entityList)

	return
}
