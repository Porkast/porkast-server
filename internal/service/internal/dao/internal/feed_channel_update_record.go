// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2023-08-23 21:27:04
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// FeedChannelUpdateRecordDao is the data access object for table feed_channel_update_record.
type FeedChannelUpdateRecordDao struct {
	table   string                         // table is the underlying table name of the DAO.
	group   string                         // group is the database configuration group name of current DAO.
	columns FeedChannelUpdateRecordColumns // columns contains all the column names of Table for convenient usage.
}

// FeedChannelUpdateRecordColumns defines and stores column names for table feed_channel_update_record.
type FeedChannelUpdateRecordColumns struct {
	ChannelId  string //
	FuncName   string //
	UpdateTime string //
}

//  feedChannelUpdateRecordColumns holds the columns for table feed_channel_update_record.
var feedChannelUpdateRecordColumns = FeedChannelUpdateRecordColumns{
	ChannelId:  "channel_id",
	FuncName:   "func_name",
	UpdateTime: "update_time",
}

// NewFeedChannelUpdateRecordDao creates and returns a new DAO object for table data access.
func NewFeedChannelUpdateRecordDao() *FeedChannelUpdateRecordDao {
	return &FeedChannelUpdateRecordDao{
		group:   "default",
		table:   "feed_channel_update_record",
		columns: feedChannelUpdateRecordColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *FeedChannelUpdateRecordDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *FeedChannelUpdateRecordDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *FeedChannelUpdateRecordDao) Columns() FeedChannelUpdateRecordColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *FeedChannelUpdateRecordDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *FeedChannelUpdateRecordDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *FeedChannelUpdateRecordDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
