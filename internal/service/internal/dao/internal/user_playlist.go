// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT. Created at 2023-11-07 20:47:48
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// UserPlaylistDao is the data access object for table user_playlist.
type UserPlaylistDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns UserPlaylistColumns // columns contains all the column names of Table for convenient usage.
}

// UserPlaylistColumns defines and stores column names for table user_playlist.
type UserPlaylistColumns struct {
	Id             string //
	PlaylistName   string //
	Description    string //
	UserId         string //
	RegDate        string //
	Status         string //
	CreatorId      string // The playlist creator user id
	OrigPlaylistId string // if the playlist is subscribed, this is the original user_playlist id
}

//  userPlaylistColumns holds the columns for table user_playlist.
var userPlaylistColumns = UserPlaylistColumns{
	Id:             "id",
	PlaylistName:   "playlist_name",
	Description:    "description",
	UserId:         "user_id",
	RegDate:        "reg_date",
	Status:         "status",
	CreatorId:      "creator_id",
	OrigPlaylistId: "orig_playlist_id",
}

// NewUserPlaylistDao creates and returns a new DAO object for table data access.
func NewUserPlaylistDao() *UserPlaylistDao {
	return &UserPlaylistDao{
		group:   "default",
		table:   "user_playlist",
		columns: userPlaylistColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *UserPlaylistDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *UserPlaylistDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *UserPlaylistDao) Columns() UserPlaylistColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *UserPlaylistDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *UserPlaylistDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *UserPlaylistDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
