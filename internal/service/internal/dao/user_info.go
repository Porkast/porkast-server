// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package dao

import (
	"context"
	"guoshao-fm-web/internal/model/entity"
	"guoshao-fm-web/internal/service/internal/dao/internal"

	"github.com/gogf/gf/v2/errors/gcode"
	"github.com/gogf/gf/v2/errors/gerror"
)

// userInfoDao is the data access object for table user_info.
// You can define custom methods on it to extend its functionality as you wish.
type userInfoDao struct {
	*internal.UserInfoDao
}

var (
	// UserInfo is globally public accessible object for table user_info operations.
	UserInfo = userInfoDao{
		internal.NewUserInfoDao(),
	}
)

// Fill with you ideas below.
func CreateUserInfo(ctx context.Context, entity entity.UserInfo) (err error) {
	if entity.Email == "" {
		entityResult, err := GetUserInfoByPhoneAndPassword(ctx, entity.Phone, entity.Password)
		if err == nil && entityResult.Id != "" {
			err = gerror.NewCode(gcode.CodeDbOperationError, "user exist")
			return err
		}
	} else if entity.Phone == "" {
		entityResult, err := GetUserInfoByEmailAndPassword(ctx, entity.Email, entity.Password)
		if err == nil && entityResult.Id != "" {
			err = gerror.NewCode(gcode.CodeDbOperationError, "user exist")
			return err
		}
	}

	_, err = UserInfo.Ctx(ctx).Insert(entity)

	return
}

func GetUserInfoByPhoneAndPassword(ctx context.Context, phone, password string) (entity entity.UserInfo, err error) {

	err = UserInfo.Ctx(ctx).Where("phone=?", phone).Where("password=?", password).Scan(&entity)
	if err != nil {
		return
	}

	return
}

func GetUserInfoByEmailAndPassword(ctx context.Context, email, password string) (entity entity.UserInfo, err error) {

	err = UserInfo.Ctx(ctx).Where("email=?", email).Where("password=?", password).Scan(&entity)
	if err != nil {
		return
	}

	return
}

func GetUserInfoByEmailOrPhone(ctx context.Context, email, phone string) (entity entity.UserInfo, err error) {

	if email == "" {
		err = UserInfo.Ctx(ctx).Where("phone=?", phone).Scan(&entity)
		if err != nil {
			return
		}
	} else {
		err = UserInfo.Ctx(ctx).Where("email=?", email).Scan(&entity)
		if err != nil {
			return
		}
	}

	return
}

func GetUserInfoByUserId(ctx context.Context, userId string) (userInfoEntity entity.UserInfo, err error) {

	err = UserInfo.Ctx(ctx).Where("id=?", userId).Scan(&userInfoEntity)
	if err != nil {
		return
	}

	return
}
