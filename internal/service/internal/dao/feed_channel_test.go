// =================================================================================
// This is auto-generated by GoFrame CLI tool only once. Fill this file as you wish.
// =================================================================================

package dao

import (
	"context"
	"testing"

	"github.com/gogf/gf/v2/os/gctx"
)

func TestGetFeedChannelTotalCount(t *testing.T) {
	type args struct {
		ctx context.Context
	}
	tests := []struct {
		name    string
		args    args
		wantErr bool
	}{
		{
			name: "Get channel total count",
			args: args{
				ctx: gctx.New(),
			},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			totalCount, err := GetZHFeedChannelTotalCount(tt.args.ctx)
			if (err != nil) != tt.wantErr {
				t.Fatalf("GetFeedChannelTotalCount() error = %v, wantErr %v", err, tt.wantErr)
			}

			t.Log("The channel total count is ", totalCount)
		})
	}
}

func TestGetZHFeedChannelList(t *testing.T) {
	type args struct {
		ctx context.Context
	}
	tests := []struct {
		name    string
		args    args
		wantErr bool
	}{
		{
			name: "Get All Chinese channel list",
			args: args{
				ctx: gctx.New(),
			},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			gotEntities, err := GetZHFeedChannelList(tt.args.ctx)
			if (err != nil) != tt.wantErr {
				t.Errorf("GetZHFeedChannelList() error = %v, wantErr %v", err, tt.wantErr)
				return
			}
			t.Log("The Chinese channel total count : ", len(gotEntities))
		})
	}
}
